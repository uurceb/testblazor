@page "/call-web-api"
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory

<h1>Call web API from a Blazor Server Razor component... like some Pokemon!</h1>

@if (getPokemonError || pokemon is null)
{
    <p>Unable to get Pokemon. Please try again later.</p>
}
else
{
    <ul>
    @foreach (var mon in pokemon.Results)
        {
            <li>@mon.Name</li>
        }
    </ul>
}

@code {
    private PokemonApi? pokemon;
    private bool getPokemonError;
    private bool shouldRender;

    protected override bool ShouldRender() => shouldRender;

    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get,
        "https://pokeapi.co/api/v2/pokemon");
        request.Headers.Add("Accept", "application/vnd.github.v3+json");
        request.Headers.Add("User-Agent", "HttpClientFactory-Sample");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            pokemon = await JsonSerializer.DeserializeAsync
            <PokemonApi>(responseStream);
        }
        else
        {
            getPokemonError = true;
        }

        shouldRender = true;
    }

    public class Pokemon
    {
        [JsonPropertyName("name")]

        public string Name { get; set; }
    }

    public class PokemonApi
    {
        [JsonPropertyName("results")]
        public IEnumerable<Pokemon> Results { get; set; }
    }
}